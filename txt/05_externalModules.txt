## 외부모듈

npm : node pakage manager

nodejs의 express프레임워크가 가장 많이 사용하는 템플릿 엔진
1. ejs
2. jade


## 1. ejs
ejs(Embedded Javascript templates)란?
- HTML템플릿 엔진 모듈
- ejs형식으로 html이 생성되어 있으면 fs를 통해 읽어서 ejs가 해석하여 결과를 html로 출력하는 엔진 모듈
- 파일형태는 xx.ejs

기본적으로 <% %> 안에 사용하며
<%= %> 는 출력
<% ; %>는 프로그램으로 보면 된다
**자바 스크립틀릿과 유사**

ejs 설치
사용자 디렉토리에서 `npm install ejs`


@10_node.external.modules/01_node.ejs.js

    var http = require('http');
    var fs = require('fs');
    var ejs = require('ejs');

    http.createServer((req, res)=>{
        //ejs파일읽기
        fs.readFile('01_html.ejs', 'utf-8', (err,data)=>{
            res.writeHead(200, {'Content-Type':'text/html'});
            //ejs모듈의 render메소드를 통해 html로 출력
            res.end(ejs.render(data));
        });

    }).listen(9999, ()=>{
    console.log("Server Running at http://127.0.0.1:9999"); 
    });

@10_node.external.modules/01_html.ejs
vscode에서 ejs파일에 대한 systax coloring은 지원하지 않는다.

    <% var name = '김동현'; %>
    <h1><%= name%></h1>
    <p><%= 100*100%></p>
    <hr>
    <% for(var i=0; i<10; i++) { %>
        <h2><%=i%>. hello ejs</h2>    

    <% } %> 
        
데이터의 전달.
ejs파일에서 변수를 선언하고, 바로 사용한 것과 달리 서버.js에서 가공된 데이터를 ejs파일에 전달해본다.

@10_node.external.modules/01_node.ejs.js
render메소드의 두번째인자로 data를 자바스크립트 객체로 전달.

    //2.데이터의 전달
    http.createServer((req, res)=>{
        //ejs파일읽기
        fs.readFile('01_html.ejs', 'utf-8', (err,data)=>{
            res.writeHead(200, {'Content-Type':'text/html'});
            //ejs모듈의 render메소드를 통해 html로 출력
            res.end(ejs.render(data,{
                name : 'kh',
                description : 'GoodMorning, KH'
            }));
        });

    }).listen(9999, ()=>{
    console.log("Server Running at http://127.0.0.1:9999"); 
    });


@10_node.external.modules/01_html.ejs
주석처리 ejs주석은 `<%# %>`

    <%# 
        var name = '김동현'; 
        var description = "안녕하세요, node.js입니다.";
    %>


## 2. jade
jade설치 `npm install jade`
npm이 설치되면서 환경변수로 등록이 되어있는지 어느 디렉토리에서 설치하건, 사용자 홈디렉토리의 .npm 예하디렉토리에 설치됨.

`npm list`로 확인 : ejs와 달리 여러 내부모듈을 가지고 있다.

    ├── ejs@2.6.1
    └─┬ jade@1.11.0
    ├── character-parser@1.2.1
    ├─┬ clean-css@3.4.28
    │ ├─┬ commander@2.8.1
    │ │ └── graceful-readlink@1.0.1
    │ └─┬ source-map@0.4.4
    │   └── amdefine@1.0.1
    ├── commander@2.6.0
    ├─┬ constantinople@3.0.2
    │ └── acorn@2.7.0
    ├─┬ jstransformer@0.0.2
    │ ├── is-promise@2.1.0
    │ └─┬ promise@6.1.0
    │   └── asap@1.0.0
    ├─┬ mkdirp@0.5.1
    │ └── minimist@0.0.8
    ├─┬ transformers@2.1.0
    │ ├─┬ css@1.0.8
    │ │ ├── css-parse@1.0.4
    │ │ └── css-stringify@1.0.5
    │ ├─┬ promise@2.0.0
    │ │ └── is-promise@1.0.1
    │ └─┬ uglify-js@2.2.5
    │   ├─┬ optimist@0.3.7
    │   │ └── wordwrap@0.0.3
    │   └── source-map@0.1.43
    ├─┬ uglify-js@2.8.29
    │ ├── source-map@0.5.7
    │ ├── uglify-to-browserify@1.0.2
    │ └─┬ yargs@3.10.0
    │   ├── camelcase@1.2.1
    │   ├─┬ cliui@2.1.0
    │   │ ├─┬ center-align@0.1.3
    │   │ │ ├─┬ align-text@0.1.4
    │   │ │ │ ├─┬ kind-of@3.2.2
    │   │ │ │ │ └── is-buffer@1.1.6
    │   │ │ │ ├── longest@1.0.1
    │   │ │ │ └── repeat-string@1.6.1
    │   │ │ └── lazy-cache@1.0.4
    │   │ ├── right-align@0.1.3
    │   │ └── wordwrap@0.0.2
    │   ├── decamelize@1.2.0
    │   └── window-size@0.1.0
    ├── void-elements@2.0.1
    └─┬ with@4.0.3
        ├── acorn@1.2.2
        └── acorn-globals@1.0.9



@10_node.external.modules/02_node.jade.js

    var http = require('http');
    var fs = require('fs');
    var jade = require('jade');

    http.createServer((req, res)=>{
        //jade파일읽기
        fs.readFile('02_html.jade', 'utf-8', (err,data)=>{
            //jade모듈의 copile메소드 jade문자열을 html로 변환할 수 있는 함수리턴
            var fn = jade.compile(data);
            res.writeHead(200, {'Content-Type':'text/html'});
            //fn함수호출을 통해 html로 출력
            res.end(fn());
        });

    }).listen(9999, ()=>{
    console.log("Server Running at http://127.0.0.1:9999"); 
    });


@10_node.external.modules/02_html.jade
특수한 형태의 html페이지
들여쓰기는 탭과 띄어쓰기(스페이스) 둘 중 하나로 반드시 통일해야한다. 둘다 사용하면 에러.

    html
    head
        title
    body
        h1
        h2
        hr
        a
    
한글깨짐현상 : charset=UTF-8 옵션 추가해서 해결

    res.writeHead(200, {'Content-Type':'text/html;charset=UTF-8'});